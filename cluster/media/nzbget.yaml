---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nzbget
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: nzbget
      version: 7.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    controllerType: deployment
    image:
      repository: linuxserver/nzbget
      tag: v21.1-r2311-ls13
      pullPolicy: Always
    env:
      TZ: "America/Los_Angeles"
      PUID: "1000"
      PGID: "100"
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "external"
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: media/nginx-basic-auth
        nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
      hosts:
      - host: usenet.media.elcarpenter.com
        paths:
        - path: /
          pathType: Prefix
      tls:
      - hosts:
        - "usenet.media.elcarpenter.com"
    persistence:
      config:
        enabled: true
        existingClaim: config-nzbget
      downloads:
        enabled: true
        emptyDir: false
        mountPath: /downloads
        storageClass: "rook-ceph-block"
        size: 100Gi
    # podAnnotations:
    #   backup.velero.io/backup-volumes: config
    additionalVolumeMounts:
    - name: nfs-media
      mountPath: "/mnt/unionfs"
    # - name: downloads
    #   mountPath: "/downloads"
    additionalVolumes:
    - name: nfs-media
      persistentVolumeClaim:
        claimName: nfs-nas-merged-media-pvc
    # - name: downloads
    #   emptyDir: {}
      # persistentVolumeClaim:
      #   claimName: nfs-media-serenity-pvc

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/hostname
              operator: NotIn
              values:
              - node00
              - node04

    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 7500Mi
