---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: lidarr
      version: 5.7.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    controllerType: deployment
    image:
      repository: k8sathome/lidarr
      tag: v0.8.0.1918
      pullPolicy: Always
    env:
      TZ: "America/Los_Angeles"
      PUID: "1000"
      PGID: "100"
    ingress:
      enabled: true
      # annotations:
      #   nginx.ingress.kubernetes.io/auth-type: basic
      #   nginx.ingress.kubernetes.io/auth-secret: media/nginx-basic-auth
      #   nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
        # kubernetes.io/ingress.class: "external"
        # nginx.ingress.kubernetes.io/auth-url: "https://auth.devbu.io/oauth2/auth"
        # nginx.ingress.kubernetes.io/auth-signin: "https://auth.devbu.io/oauth2/start"
        # nginx.ingress.kubernetes.io/configuration-snippet: |
        #   # Bypass auth for requests from local network
        #   # This works, but are there some security concerns?
        #   satisfy any;
        #   allow 192.168.0.0/16;
        #   allow 172.16.0.0/12;
        #   allow 10.0.0.0/8;
        #   deny all;
      hosts:
      - host: music.media.elcarpenter.com
        paths:
        - path: /
          pathType: Prefix
      tls:
      - hosts:
        - "music.media.elcarpenter.com"
      additionalIngresses:
      - enabled: true
        nameSuffix: "api"
        annotations:
          kubernetes.io/ingress.class: "external"
        hosts:
        - host: music.media.elcarpenter.com
          paths:
          - path: /api
            pathType: Prefix
        tls:
        - hosts:
          - "music.media.elcarpenter.com"
    persistence:
      config:
        enabled: true
        existingClaim: config-lidarr
    #     storageClass: "rook-ceph-block"
    #     accessMode: ReadWriteOnce
    #     size: "25Gi"
    # podAnnotations:
    #   backup.velero.io/backup-volumes: config
    additionalVolumeMounts:
    - name: media-rocinante
      mountPath: "/media-rocinante"
    - name: media-serenity
      mountPath: "/media-serenity"
    additionalVolumes:
    - name: media-rocinante
      persistentVolumeClaim:
        claimName: nfs-media-rocinante-pvc
    - name: media-serenity
      persistentVolumeClaim:
        claimName: nfs-media-serenity-pvc
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 1500Mi
